[{"name": "Sagnik kundu", "email": "kundusagnik768@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/4e4d4bfa-2505-40b6-aa74-71e9b7af31aa", "badges_count": 3, "incomplete_assignments_count": 12, "completed_assignments_count": 3, "badges": ["Get Started with Looker", "Get Started with Pub/Sub", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Get Started with Looker"]}, {"name": "Mrinmay Das", "email": "mrinmaydas2604@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/14cc47be-5fdf-460a-9cb2-9c82d683591b", "badges_count": 45, "incomplete_assignments_count": 9, "completed_assignments_count": 6, "badges": ["Qwiklabs Trivia December 2023 Week 3", "Qwiklabs Trivia December 2023 Week 4", "Qwiklabs Trivia October 2023 Week 3", "Qwiklabs Trivia October 2023 Week 4", "Qwiklabs Trivia September 2023", "Level 3: GenAI", "Qwiklabs Trivia August 2023", "Integrate BigQuery Data and Google Workspace using Apps Script", "Cloud Speech API: 3 Ways", "Build a Website on Google Cloud", "Introduction to Generative AI", "Level 3: GenAI", "Level 2: Apps Script and Networks", "Engineer Data for Predictive Modeling with BigQuery ML", "Level 1: BigQuery ML, Cloud Architecture and Devops Skills", "Cloud Architecture: Design, Implement, and Manage", "Develop Serverless Apps with Firebase", "Create ML Models with BigQuery ML", "Qwiklabs Trivia July 2023", "Deploy Kubernetes Applications on Google Cloud", "Implement DevOps Workflows in Google Cloud", "Classify Images with TensorFlow on Google Cloud", "Streaming Analytics into BigQuery", "Get Started with Looker", "App Building with AppSheet", "Analyze BigQuery Data in Connected Sheets", "Prepare Data for Looker Dashboards and Reports", "Use Machine Learning APIs on Google Cloud", "Build a Data Warehouse with BigQuery", "Implement Load Balancing on Compute Engine", "Monitor and Manage Google Cloud Resources", "Store, Process, and Manage Data on Google Cloud - Command Line", "Store, Process, and Manage Data on Google Cloud - Console", "Set Up an App Dev Environment on Google Cloud", "Set Up a Google Cloud Network", "Level 2: Data Deep Dive", "Secure BigLake Data", "Tag and Discover BigLake Data", "Get Started with Sensitive Data Protection", "Analyze Images with the Cloud Vision API", "The Basics of Google Cloud Compute", "Getting Started with Go on Google Cloud", "App Engine: 3 Ways", "Level 1: AppDev and Infrastructure", "Networking Fundamentals on Google Cloud"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Monitoring in Google Cloud", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with Looker"]}, {"name": "Mahulee Lahiri", "email": "mahuleelahiri15@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/5b4ecd58-cf18-4a80-9ee5-cbfb4a9bfaa5", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Prolay Dutta", "email": "prolaydutta94@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/43a1bb0e-1e5c-4da3-a413-877913a7fd18", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Analyze Images with the Cloud Vision API", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Get Started with Pub/Sub", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with Google Workspace Tools", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Anirban Basak", "email": "anirbanwork2024@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/914ba810-4075-4fd3-ace6-5f7f06ef529e", "badges_count": 17, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Cloud Functions: 3 Ways", "Networking Fundamentals on Google Cloud", "Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Introduction to Generative AI", "Level 3: Google Cloud Adventures", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sourav Ram Mani", "email": "srm.deku.ug@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/0fb8d94a-0562-4af3-8ad2-9e5a8d2292f4", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Swagata Ghosh", "email": "gswagata518@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/0c53c0d6-5dbc-4c22-8071-4fb75084051f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Saswata Biswas", "email": "s4swata2024@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/bd6d2d80-b35d-4e89-a227-b32e74e2e00a", "badges_count": 13, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Pub/Sub", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud"], "completed_assignments": ["Get Started with Pub/Sub", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Debasree Sen Gupta", "email": "debasreesengupta376@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/bf16c0b1-c139-4245-84cc-950e911e3e98", "badges_count": 18, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Diwali in The Arcade", "Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Get Started with Google Workspace Tools", "App Engine: 3 Ways", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Cloud Speech API: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Deep Kumar Dey", "email": "deydeepkumar67@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/6e9a5799-90c0-40ec-b481-770a78b68d5a", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Haimanti Chakraborty", "email": "hiwinnie06@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b89907f0-cbf5-4105-8fc1-d72917e2ca63", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Monitoring in Google Cloud", "Prompt Design in Vertex AI", "Get Started with Google Workspace Tools", "Get Started with Looker", "Get Started with Dataplex", "Cloud Functions: 3 Ways", "Networking Fundamentals on Google Cloud", "Analyze Images with the Cloud Vision API", "Develop GenAI Apps with Gemini and Streamlit", "Get Started with Pub/Sub", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Arushi Ghosal", "email": "arushighosal2@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/6a9b1154-ef56-418f-a2b3-988e551cb327", "badges_count": 10, "incomplete_assignments_count": 6, "completed_assignments_count": 9, "badges": ["App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Pub/Sub", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways"], "completed_assignments": ["Get Started with Pub/Sub", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Rishab Ganguly", "email": "gangulyrishab5@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9f4f59b4-6730-43ca-b51d-ee37f4ff6db2", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "SHREYAN MITRA", "email": "mitrashreyan2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/4a8bfa0d-76d3-4916-a463-1292b468f7be", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Danisha Basu", "email": "dbasu2301@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9737b7f3-4682-4b9c-85e1-2c245e211afa", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Adrija Sinha", "email": "a81978469@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/0a5b6a17-dce3-4d82-915f-5fa0a410aba8", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Rishi Raj M", "email": "mrishiraj64@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/6492a2ff-5287-40dd-ae6a-f4ca8daea8a0", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Cloud Speech API: 3 Ways", "Monitoring in Google Cloud", "Networking Fundamentals on Google Cloud", "Prompt Design in Vertex AI", "Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "App Engine: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Agniva chakraborty", "email": "agnivachakraborty1006@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/58631bbf-9243-4c54-9cb0-ac3767af7c22", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Anushrita Dey", "email": "deyanushrita@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/90c665ab-c7d5-437b-a9ea-a551fa473a65", "badges_count": 8, "incomplete_assignments_count": 8, "completed_assignments_count": 7, "badges": ["Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Level 3: Google Cloud Adventures", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways"], "completed_assignments": ["Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Prithwish Das", "email": "rd0135946@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/cf07b451-3c73-4a04-9e51-276f4b6dfc72", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Arkapravo Ghosh", "email": "arkapravoghosh0@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/30d158c3-2d48-4a13-8cf8-81ec30d71710", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Dipika Gupta", "email": "dipikagdg06@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/764107b9-f136-4d3d-83d6-d63909b9bf30", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Arkadeep Ganguli", "email": "arkadeep.ganguli18@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/852be3cc-0679-48d7-aed4-8b67157279dc", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Get Started with Pub/Sub", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sutirtha Halder", "email": "haldersuti@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f0cfc232-a659-4bcc-bc69-e6f226e488be", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Santanu Bag", "email": "santanu1465@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/78839170-7e8d-4534-901b-7b0996a42725", "badges_count": 3, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Get Started with Pub/Sub", "The Basics of Google Cloud Compute"]}, {"name": "Abir Chakraborty", "email": "abirchakraborty5678@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/badbd55e-6091-420f-a1ce-6df05ba913cd", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Abeer Lal Nandi", "email": "abeerlalnandi@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/1326f67b-c9c6-4c7a-94dd-5c4ad51e80b7", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Bibek Dhara", "email": "tcg.bkd@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/85bc8ca4-2aa2-408d-ba96-886b8e6e42a7", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "DISHA SHARMA", "email": "dishasharma060903@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/94c6b2c1-2fc4-403d-a3f0-f09ecf21aa75", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Aditi Dey", "email": "aditi028052005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f036ce0d-515b-412d-9270-ee63ad0e96c4", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Ashutosh Kumar Jha", "email": "2005ashu2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/46699711-372a-48c1-902c-1d397c589157", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Ayushman Acharya", "email": "drdebug16@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/714b1b00-d1af-41c1-bf7b-68bfd49ba383", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Pranati Mondal", "email": "pranatimondal20iedc@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/8eb524d3-ad24-40c7-8e08-abcc1bcb54f4", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Anish Sharma", "email": "anishsharmagdc2024@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/7d356a1a-16c3-4e60-9639-5bf2f2ffd085", "badges_count": 5, "incomplete_assignments_count": 12, "completed_assignments_count": 3, "badges": ["Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker"], "completed_assignments": ["The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Bhaskar Samanta", "email": "bhaskarsam2003@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/528c2ea0-e4c4-4934-bf90-5c4542a24efa", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Diwali in The Arcade", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sugata Nayak", "email": "sugatanayak65@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/1939514f-cc66-4188-8c2e-5c806f799e3f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Anirban Bhandari", "email": "work.anirban04@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/14f99a4e-3af6-4da8-ad69-dedc0f3439d0", "badges_count": 2, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Diya Hazra", "email": "diyahazra848@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a13362ac-0971-4ca9-9ec8-bc7255be65da", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Dibyangshu Ghosh", "email": "d.ghosh.3088@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/10bbb78d-e7b4-4a87-9f38-02191ab8426c", "badges_count": 22, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["The Arcade Base Camp November 2024", "The Arcade Trivia November 2024 Week 2", "The Arcade Trivia November 2024 Week 1", "Diwali in The Arcade", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Level 2: Cloud and Serverless Solutions", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures", "Introduction to Generative AI"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Raul Akhuli", "email": "akhuliraul11@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f3636e33-904b-431b-867f-60ac73aea641", "badges_count": 14, "incomplete_assignments_count": 3, "completed_assignments_count": 12, "badges": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI"], "completed_assignments": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Milan Das", "email": "milandas11.arcade@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/695e41e4-5a9d-492c-9fc5-f3ef9712fd9b", "badges_count": 17, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Introduction to Generative AI", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Develop GenAI Apps with Gemini and Streamlit", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Pub/Sub", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Soumyadip Chatterjee", "email": "soumyochatterjee56@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e4188a63-6a23-4229-ab32-80bfc0beb94f", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Nilanjan Saha", "email": "sahanilanjan493@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/aa716394-5e63-41e5-8a8f-a92d75f534a4", "badges_count": 2, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["The Basics of Google Cloud Compute"]}, {"name": "Aakash Dutta", "email": "aadutta1500@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c3805fbe-56f2-47a1-9520-9e7f8f40c96d", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Uday Sankar De", "email": "udaysankar.gdsc@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e6560b44-a0de-4ac4-8337-61a161546817", "badges_count": 15, "incomplete_assignments_count": 1, "completed_assignments_count": 14, "badges": ["Analyze Images with the Cloud Vision API", "Prompt Design in Vertex AI", "Monitoring in Google Cloud", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Looker", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures", "Get Started with API Gateway", "Get Started with Cloud Storage"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit"], "completed_assignments": ["Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Anuska Rajak", "email": "anuskanew20@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b1ccfe11-0f07-43ab-8071-fafd88824258", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Get Started with Pub/Sub", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Ishika Saha", "email": "ishikasaha117@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/93aa9097-e49f-4b3f-b961-e8bf92216c87", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sukriti Sikdar", "email": "sukritisikdar10d45@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/81f6c746-6bd8-4aa8-a0a2-71cddef8dfc7", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Rudranil Basak", "email": "rudranilbasak278@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/8c547b56-aaae-49b6-ac14-10dc660a62fa", "badges_count": 7, "incomplete_assignments_count": 9, "completed_assignments_count": 6, "badges": ["App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with API Gateway"], "completed_assignments": ["App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with Cloud Storage"]}, {"name": "Sreedeep Ghosh", "email": "sreedeep003@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/03975ef0-b749-45ba-83f9-b59c9f30ba63", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Saourjyaa Banerjee", "email": "saourjyaabanerjee4@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b9861bb8-e7ff-477b-bfbb-755ebf7ccd13", "badges_count": 5, "incomplete_assignments_count": 10, "completed_assignments_count": 5, "badges": ["Get Started with Looker", "Get Started with API Gateway", "Get Started with Pub/Sub", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex"], "completed_assignments": ["Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Rohit Dey", "email": "rohitdey12349@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a81c5ba6-bdf8-4cb3-8ad7-976580b86f70", "badges_count": 12, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Prompt Design in Vertex AI", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Google Workspace Tools", "Get Started with API Gateway", "Get Started with Pub/Sub", "Get Started with Looker", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud"], "completed_assignments": ["Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Bristi Maitra", "email": "bristimaitra82@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/619239fe-5471-4740-b9d4-4ebe6b2c1fee", "badges_count": 2, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with Dataplex", "Get Started with Pub/Sub"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Get Started with Pub/Sub", "Get Started with Dataplex"]}, {"name": "Gouri Agarwal", "email": "lakshmiagarwal2018@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/aecfaad7-4c28-4bca-916a-85e130df76ca?locale=en", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Isha Roy", "email": "ishaother06@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/fcccbad9-c837-47f0-9e7a-2da9ab925218", "badges_count": 12, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Looker", "Get Started with Dataplex", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Get Started with API Gateway", "Get Started with Google Workspace Tools", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud"], "completed_assignments": ["Get Started with Pub/Sub", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Saptarshi Chattopadhyay", "email": "saptarshichattopadhyay543@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/8eb4bc29-2a0e-44ff-bd5c-02f91ff8de67", "badges_count": 17, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Rajeet Ash", "email": "rajeetash04@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/22bb41d5-48da-4e76-b155-c52d7522bc26", "badges_count": 13, "incomplete_assignments_count": 2, "completed_assignments_count": 13, "badges": ["Networking Fundamentals on Google Cloud", "Develop GenAI Apps with Gemini and Streamlit", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Looker", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Pub/Sub"], "incomplete_assignments": ["Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Pannala Trishay Reddy", "email": "reddytrishay@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/cac35f87-04bf-411a-98ca-004f82bbd189", "badges_count": 3, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with Pub/Sub", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway"], "completed_assignments": ["Get Started with Pub/Sub", "Get Started with Cloud Storage"]}, {"name": "Ritika Nayak", "email": "nayakritika182@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/05c96986-a32f-4813-9200-a8f693845748", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Shourjyo Chakraborty", "email": "chakrabortyshourjyo@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/224a27fb-0305-4504-b246-c71a483682ad", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Avik Ghatak", "email": "ghatakavik2003@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/884d698c-b947-40ca-95cf-8cd99c428199", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Soumyadeep Das", "email": "soumyadeepdas26042005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9e91127e-2cd6-47eb-8ae4-6b11815e34bb", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Adrija Payin", "email": "adrijapayin5@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a48c9478-d8fd-454b-9295-6cbbe33c6bbb", "badges_count": 10, "incomplete_assignments_count": 6, "completed_assignments_count": 9, "badges": ["Cloud Functions: 3 Ways", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Monitoring in Google Cloud", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Get Started with Google Workspace Tools"], "completed_assignments": ["Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Basabdatta Chowdhury", "email": "basabdatta1329@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c70ba4ba-9bd3-433e-941f-c8bd0fc64e09", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Chirashree Pan", "email": "chirashreepan42@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/16122509-9434-4f44-9b86-eefc8cea98cc", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Rudranil Chakraborty", "email": "gen.ai.rudranil@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/7cd78549-cbe0-46b7-8589-2e05a4cb89fe", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Kinshuk Chakraborty", "email": "kinshukchakrabortyuem2004@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/5d03cda8-31b5-4000-a070-d97216adc372", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sandipan Jha", "email": "sandipanjha88@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a0f47ea2-cbdb-4f39-aa9e-7f5837967f33", "badges_count": 10, "incomplete_assignments_count": 7, "completed_assignments_count": 8, "badges": ["Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "App Engine: 3 Ways"], "completed_assignments": ["Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Mitrajit Ghosh", "email": "ghoshmitrajit05@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e77d2ac2-fe69-497d-949a-e6dc2ea7d12f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Ayush Datta", "email": "ayushdatta06@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/cee65888-9767-4d50-93e6-f2aab2990d0f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Iffat Jahan", "email": "iffat.j1204@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/31c9f0f4-cfe6-42b7-9e31-6f97abd7c9df", "badges_count": 8, "incomplete_assignments_count": 8, "completed_assignments_count": 7, "badges": ["Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Tousif Hasnat", "email": "Tousifhasnat646@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e36d4791-5c4d-47f7-9ab1-dc47280e0907", "badges_count": 15, "incomplete_assignments_count": 1, "completed_assignments_count": 14, "badges": ["Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Prompt Design in Vertex AI"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Swatadru Paul", "email": "professionalsp123@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/56f3c78e-98eb-4fb2-bdd1-61b5945e655d", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sinjini Laha", "email": "sinjinilaha06@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/fe1344e2-e261-42fc-a533-36e236282e9f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Zainah Malak Ahmed", "email": "zainahahmed2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/cd05c0ae-bff9-49b0-9219-56b402585385", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Mainak Ghosh", "email": "mainak.2005gh@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/fd709932-d845-4e6c-a94a-41a2b012e46b", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Soumi Saha", "email": "soumisahagenai@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/abd78af6-e46f-49c0-85e3-e7aab33e381d", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Pratyush Saha", "email": "p9330102345@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/676afa6b-6a4b-4afd-8133-052f9f35120a", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Srinjoy Bhowmick", "email": "bhowmicksrinjoy541@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f70519a0-9898-4ebd-96e5-d0dcf23c42ee", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sujal Lal", "email": "sujallal2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c78cb089-fd9e-42bc-b9ba-062919b874ae", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Analyze Images with the Cloud Vision API", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Get Started with Pub/Sub", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Biswa Ganguly", "email": "biswaganguly16@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/ee647471-081e-40dc-aca5-f5f8efb6fdbe", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Rupam Golui", "email": "rupamgolui69@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/2d234fa3-ed2d-4ff5-b996-53d3f7bb6c82", "badges_count": 12, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "App Engine: 3 Ways"], "completed_assignments": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Hritesh Saha", "email": "hriteshsaha4@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/96b8c0de-738e-4df9-a885-f6644a5541b0", "badges_count": 15, "incomplete_assignments_count": 1, "completed_assignments_count": 14, "badges": ["Networking Fundamentals on Google Cloud", "Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit"], "completed_assignments": ["Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Poushali Kundu", "email": "poushalikundu063@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/80715ea3-3754-4911-ac71-7bd9b141b030", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Abhisek Dastidar", "email": "abhisekdastidar90@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/60d40bbe-c47e-4aec-91b8-3a0c0dd23e0a", "badges_count": 12, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Cloud Storage", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Cloud Speech API: 3 Ways", "Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Biswajit Sow", "email": "bisuuu71@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/75d1f22f-f82f-4f9f-919a-7dced6ff60de", "badges_count": 3, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with API Gateway", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker"], "completed_assignments": ["Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "ASHANKA DAS", "email": "ashankadas2006@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/3939bea5-85b4-41ce-aa75-5d0e73096a22", "badges_count": 11, "incomplete_assignments_count": 6, "completed_assignments_count": 9, "badges": ["Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Networking Fundamentals on Google Cloud", "Get Started with Pub/Sub", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud", "Get Started with Google Workspace Tools", "Get Started with Looker"], "completed_assignments": ["Get Started with Pub/Sub", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Krutika Sachin Kodam", "email": "krutikakodam074@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/dd219523-bce9-4da8-8f7f-2051ca641898", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Introduction to Generative AI"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Raj Bhattacharyya", "email": "torichoudhury72@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/ead90a78-81a4-4c44-9eb8-057770928ffc", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Develop GenAI Apps with Gemini and Streamlit", "Get Started with Looker", "Prompt Design in Vertex AI", "Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Abesh Chakraborty", "email": "abeshchakraborty10@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/ba2b92a2-2132-4957-a081-0ff2403c3482", "badges_count": 12, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Get Started with Google Workspace Tools", "Get Started with API Gateway", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Networking Fundamentals on Google Cloud", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with Cloud Storage"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "The Basics of Google Cloud Compute", "Get Started with API Gateway"]}, {"name": "Achintya Jyoti", "email": "achintyajyoti03@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9ccba649-beb4-4957-93fc-1b0ba6653344", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Akash Mondal", "email": "storiespictures123@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/934be629-b9a4-4e7d-af5f-2e35a42a69d2", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Get Started with Pub/Sub", "Cloud Functions: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with Dataplex", "Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Diwali in The Arcade", "App Engine: 3 Ways", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Satwik Singha", "email": "rajputsatwiksingha2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/ea56033a-92df-42bc-9a60-c54aef6174ba", "badges_count": 2, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures", "Introduction to Generative AI"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Yashraj Singh", "email": "singh.yashraj1976@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/6ff59340-a34e-447d-91ba-0e4acaaa9394", "badges_count": 14, "incomplete_assignments_count": 3, "completed_assignments_count": 12, "badges": ["Prompt Design in Vertex AI", "Get Started with Dataplex", "Get Started with API Gateway", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Cloud Storage", "Introduction to Generative AI", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Get Started with Google Workspace Tools", "Get Started with Looker"], "completed_assignments": ["Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Meghamitra Banerjee", "email": "meghamitrabanerjee2024@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/28240fe5-0810-49e6-ae68-4a48838daa94", "badges_count": 2, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["The Basics of Google Cloud Compute"]}, {"name": "Soham Mukhopadhyay", "email": "sohmukhopadhyay@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/1bef9d96-0745-4732-aa09-c0a85c44c80f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "ANKIT KR SRIVASTAVA", "email": "vkankit3@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/0ec02ac1-c8a4-44ae-87f7-276391a65e5f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Riya Ghosh", "email": "riyaghosh2269@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/ef01a9a1-79b3-4452-8213-61542504fcde", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Jit Karmakar", "email": "arookiecoder@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/aab8170f-5e40-473a-8170-97e74385c0d3", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Roney Ghosh", "email": "roneyghosh66@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/3058ecae-7b4d-471c-a761-14cf70b6f06f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sarbojit Podder", "email": "sarbojit137@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a06b7a54-54ad-4667-9de0-b3884cda899c", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Ankita Ghosh", "email": "ankitaghoshag48@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/cd486f67-e32b-4b27-b817-976bdfbeadc8", "badges_count": 1, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["Get Started with Pub/Sub"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Get Started with Pub/Sub"]}, {"name": "Anweeksha Saha", "email": "anweekshagenai@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/91d11cff-ab9e-4350-bb22-99d1d87c62d5", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Amrita Bhagat", "email": "bhagatharshita23@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/bba7fe9e-e8ed-4f26-a74c-878af898fe53", "badges_count": 4, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway"], "completed_assignments": ["The Basics of Google Cloud Compute", "Get Started with Cloud Storage"]}, {"name": "UPASANA MUKHERJEE", "email": "upasanam777@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/d85bd167-6313-4186-a973-0725332f1486", "badges_count": 16, "incomplete_assignments_count": 1, "completed_assignments_count": 14, "badges": ["Get Started with Google Workspace Tools", "Get Started with Pub/Sub", "Diwali in The Arcade", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Cloud Functions: 3 Ways"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Somrik Mondal", "email": "mondalsomrik551@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c39b4304-b5c1-45d7-b632-9f17b65de430", "badges_count": 8, "incomplete_assignments_count": 8, "completed_assignments_count": 7, "badges": ["App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "The Basics of Google Cloud Compute", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Get Started with Google Workspace Tools"], "completed_assignments": ["App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Puspak Samanta", "email": "puspak290504@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/99657d35-418c-42cb-8a00-66c40a7088c2", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Anisha Majumder", "email": "anishamajumder20@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c5d2d801-64cd-42ee-be85-d40231a57dd7", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Priyabrata Saha", "email": "priyabratasaha473@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f358795b-50f3-4b15-8a59-b3e4772453b5", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sayan Santr", "email": "genai.sayansantra@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/2142682f-88c7-4f35-9054-478568d621f9", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Subhojit Das", "email": "subh2k5@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/efcfc35a-d367-432a-bec1-62ac1edb8f1b", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "The Basics of Google Cloud Compute", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Preeti Dey", "email": "preetiii1251@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/6ff4c7ad-7752-4b72-84fc-61338c9f850e", "badges_count": 17, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["The Arcade Trivia November 2024 Week 1", "Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Get Started with API Gateway", "Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Cloud Speech API: 3 Ways", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Get Started with Looker", "Get Started with Dataplex", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Subham Mondal", "email": "subham112005mondal@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f49a3a58-6e6f-4c5b-a2f1-8a1b9c2495d2", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Pritha Dalui", "email": "daluipritha10@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/80c76df5-ed55-4ee3-931a-993874f2e0d3", "badges_count": 9, "incomplete_assignments_count": 7, "completed_assignments_count": 8, "badges": ["Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with API Gateway", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Get Started with Google Workspace Tools"], "completed_assignments": ["Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Ahali Saha", "email": "ahiesaha2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/43af3638-c10a-4c65-aa04-4626a584d484", "badges_count": 15, "incomplete_assignments_count": 1, "completed_assignments_count": 14, "badges": ["Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Get Started with Dataplex", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Anindita Bhattacharjee", "email": "anindita.bhattacharjee2003@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/518b94e2-e2df-4f49-93b9-68d7d9c73875", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Shradha Verma", "email": "wizofprogramming.1678@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/073a1c69-3121-4548-8910-60021c8f2636", "badges_count": 14, "incomplete_assignments_count": 2, "completed_assignments_count": 13, "badges": ["Prompt Design in Vertex AI", "Get Started with Dataplex", "Get Started with Looker", "Analyze Images with the Cloud Vision API", "Get Started with Pub/Sub", "Get Started with API Gateway", "Cloud Functions: 3 Ways", "Cloud Speech API: 3 Ways", "Monitoring in Google Cloud", "Networking Fundamentals on Google Cloud", "App Engine: 3 Ways", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Ankit Pradhan", "email": "ankitpradhan25006@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/109ac2a6-e2a0-430e-8bd5-b060e5284910", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Rajanya Majumder", "email": "rajanyamajumder1@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9d1bba63-eebd-470e-a2a1-966351e396f8", "badges_count": 13, "incomplete_assignments_count": 2, "completed_assignments_count": 13, "badges": ["Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Analyze Images with the Cloud Vision API", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Dataplex", "Get Started with Pub/Sub", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI"], "completed_assignments": ["Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Ratul Bhattacharjee", "email": "ratulbhattacharjee54@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c45a7ac8-5abb-4702-80bf-601e18004970", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Get Started with Google Workspace Tools", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with Dataplex", "Get Started with Pub/Sub", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Saikat De", "email": "saikatde42@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e049515a-016a-4754-86c6-575525da106a", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Shristi Sharma", "email": "s13hristi.2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9fafa116-e112-4b91-9508-2971746bdb5b", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Annesha Gayen", "email": "anneshagayen49@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/276ce4f5-9ae4-4237-85c9-24b03f32562b", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Cloud Functions: 3 Ways", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Pub/Sub", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Soham Mukherjee", "email": "soham007mukherjee@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/3e11d32c-2e1f-449e-b512-6f1bb32e0699", "badges_count": 15, "incomplete_assignments_count": 2, "completed_assignments_count": 13, "badges": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Get Started with Dataplex", "Get Started with Google Workspace Tools", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI"], "completed_assignments": ["Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Arnab Mandal", "email": "15arnabmandal13884@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/92a71d75-bd5f-43aa-8546-77fde39b462d", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sovan Banerjee", "email": "sovancse65@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a4244dfd-7f25-4683-9eb8-30b556ffe074", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Madhuchhanda Das", "email": "madhuchhandadasuemcse2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/63eaf2f8-ab58-4d15-b21f-236d11c33c57", "badges_count": 4, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures", "Introduction to Generative AI"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["App Engine: 3 Ways", "The Basics of Google Cloud Compute"]}, {"name": "Tanushree Paul", "email": "tanushree47paul@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a556a611-c8e8-4ac9-9ce2-9001c4707d00", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Soumyajeet Das", "email": "soumyajeetdasgenai@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e701c584-5fed-447f-8e89-e31b5157ce0d", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Aryan Kundu", "email": "aryankundu616@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/20cc442d-f531-4567-a721-b5cd6cafeb44", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "SUPRAKASH GHOSH", "email": "suprakashghosh37@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c577ccd9-59c2-4d4a-bc09-22749c16abfa", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Utsha Paul", "email": "upaul4238@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/cd5df9d6-88a2-4ca5-a50d-6245ffd2422e", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Kuntal chakraborty", "email": "kuntalchakrabortyy@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/eeddf0ff-591e-470d-b97a-8393d4c56a66", "badges_count": 17, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Diptesh Roy", "email": "diptesh240905@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/afb44366-4f0a-411c-bcde-91c7667586be", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Level 3: Google Cloud Adventures", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Somya Tiwary", "email": "tiwarysomya400@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/5490af7b-8d7f-45e5-9b83-3c353c1e7c6b", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Shrestha Ganguli", "email": "shrestha.jdb@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/fcd76cbc-1120-479e-9e42-b955c6557304", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "GURLEEN KAUR UBHI", "email": "gurleenubhi0@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/aa926f9a-99f5-4127-94eb-345c13ef4995", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Hamza Sheikh Hamedur Rahman", "email": "hamzasheikh06off@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/73f3061f-6360-4611-a60a-e934d41f40db", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Prakash Metla", "email": "prakashmetla2020@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/1259e393-a2cf-4960-87c9-2f61ef663977", "badges_count": 14, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Get Started with API Gateway", "Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Diwali in The Arcade", "Cloud Speech API: 3 Ways", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Get Started with Cloud Storage", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Deeptadeep Mitra", "email": "deeptadeepmitra708@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/04003c70-b850-4a8a-acaf-392c5fd47f3b", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Arunaditya Bhattacharjee", "email": "arunadityabhattacharjee@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f34d05d0-064d-40b5-a764-d28cbedd3fee", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "PRIYANSH GHOSH", "email": "priyansh0804@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/cd8d331d-846a-4b71-b561-bc81a12a3247", "badges_count": 3, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["App Engine: 3 Ways", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["App Engine: 3 Ways"]}, {"name": "Lizzie Barman", "email": "barmanlizzie@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/4781e1bb-5946-4a19-8aaf-920c9457dd47", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Monitoring in Google Cloud", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Develop GenAI Apps with Gemini and Streamlit", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "Cloud Functions: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sayan Saha", "email": "bassguitar446@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/ac167c46-c782-4627-844a-95b12c80d19a", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "DEBMALYA ROY", "email": "debmalyaroy2024@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/bacd3bfb-7dee-4f44-ab79-2dee1332d006", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Pallav Saha", "email": "sahapallav05@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a309d121-9f85-49bd-993b-d2381c8652f1", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Shreya Majumdar", "email": "shreya.shine02@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e637d965-2da8-428d-a47b-3872c1d8cd4c", "badges_count": 13, "incomplete_assignments_count": 3, "completed_assignments_count": 12, "badges": ["Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Pub/Sub", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API"], "completed_assignments": ["Get Started with Pub/Sub", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sudipta Pratiher", "email": "sudiptapratiher@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a070d61a-fb19-46a1-b31b-7dd499a3c30f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Priyanshu raj", "email": "shashank.skh796@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/60f35729-4475-433c-82b9-5e31ba528c59", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Arpan Mitra", "email": "arpanmitra854@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/fbf57418-17df-4511-8668-ed8116bea55d", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Siddhant sinha", "email": "ssgaca12@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/2a980fab-274b-46e0-85d6-69b7a3042590", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Preeti Mandal", "email": "preeti.2003.mandal@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/0bca1ff3-34c6-4fe5-a630-f94e85de4e2d", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Rupasree Chakraborty", "email": "rupjam24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/7884a9da-ebc9-4c17-9e6b-5c2ac138dd08", "badges_count": 5, "incomplete_assignments_count": 11, "completed_assignments_count": 4, "badges": ["Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex"], "completed_assignments": ["The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Rajasree Chakraborty", "email": "rajasreejam24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/04c6d7b2-53d0-4887-b5c8-974ae900b831", "badges_count": 4, "incomplete_assignments_count": 12, "completed_assignments_count": 3, "badges": ["Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker"], "completed_assignments": ["The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Rohan Kumar", "email": "offcrohan@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/764b71bb-e868-41be-8262-27dd3ca0d36a", "badges_count": 2, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sayandeep Dutta", "email": "sayandeepdutta35@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f8e6ec4b-33be-4965-9e6a-01c2c976dd5d", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Subhamita Adhikari", "email": "sacreationwb@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a5187c0f-ecaa-44b8-be44-2e03880b948d", "badges_count": 17, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Piyush Bharti", "email": "relatablepiyush21@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/8b09fe58-ed39-4595-b05d-e7159f0776fa", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Arghya Pramanik", "email": "arghyaparamanik06@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/7ec059f8-cdd7-4942-ab28-6572995b8714", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Anis Narayan", "email": "anish20nr@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/3298ac8d-dbbf-4c71-8912-4d90f2ae6508", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Tushar Anand", "email": "Thetusharpramanik@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a0edd30c-4713-4846-be22-2ed1a3cdf2ed", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Anwesha Banik", "email": "anwesha03b@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b1d005b7-2c9b-4f58-a864-fa2a632d398e", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Soumyadeep dinda", "email": "dindasoumyadeep123@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/8df76afa-c290-40f1-91ef-521e5718b243", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Shuvam Poddar", "email": "shuvampodder8777@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e86370c0-5f3c-4e70-8a1b-d6d79c5fea31", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sayuri Ghosh", "email": "sayurigh2024@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c73de5c7-701b-4479-b88d-d22b4e62eb38", "badges_count": 11, "incomplete_assignments_count": 5, "completed_assignments_count": 10, "badges": ["Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Networking Fundamentals on Google Cloud", "Analyze Images with the Cloud Vision API", "Cloud Speech API: 3 Ways", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Get Started with Pub/Sub", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex"], "completed_assignments": ["Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Subhalakshmi Sarkar", "email": "subhagenai24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/4f220639-cea1-4709-8d33-e2f232c59096", "badges_count": 1, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["Get Started with Google Workspace Tools"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Get Started with Google Workspace Tools"]}, {"name": "Durba Banerjee", "email": "adz.durba@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/2a8e450a-2876-42dc-933b-213c0662bc59", "badges_count": 4, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with Cloud Storage", "Introduction to Generative AI", "Level 3: Google Cloud Adventures", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway"], "completed_assignments": ["The Basics of Google Cloud Compute", "Get Started with Cloud Storage"]}, {"name": "Isha Agarwal", "email": "agarwalisha402@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/199f0723-f04e-4b24-b631-faf0683025d8", "badges_count": 15, "incomplete_assignments_count": 2, "completed_assignments_count": 13, "badges": ["Cloud Functions: 3 Ways", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Get Started with Looker", "The Basics of Google Cloud Compute", "Develop GenAI Apps with Gemini and Streamlit", "Get Started with API Gateway", "Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Diwali in The Arcade", "App Engine: 3 Ways", "Get Started with Dataplex", "Get Started with Cloud Storage", "Introduction to Generative AI"], "incomplete_assignments": ["Cloud Speech API: 3 Ways", "Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Arkarup Kundu", "email": "arkarupkstudyjams@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/24fb4655-c774-4399-a799-59683b40b03c", "badges_count": 15, "incomplete_assignments_count": 1, "completed_assignments_count": 14, "badges": ["Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Networking Fundamentals on Google Cloud", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub"], "completed_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sougata Sarkar", "email": "sougatagenai24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b1649f69-f4fd-4287-bc24-ea63baee0b66", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sayantanee Sinha", "email": "sinhasayantanee1@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/15f57232-f2f3-48a6-9a97-aebf80583a11", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Soumik Roy", "email": "royaidrik1234@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b659c378-8e51-411e-b27e-d8176a01fb0c", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sana Quadery", "email": "sanaquadery348@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/bf44c32d-ab93-48a6-b806-53fa026f59d1", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Shubham Sadhak", "email": "shubhamsadhak182@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/5266aad8-46ee-4a02-9dce-37f46ed3aa43", "badges_count": 15, "incomplete_assignments_count": 1, "completed_assignments_count": 14, "badges": ["Get Started with Google Workspace Tools", "Get Started with Pub/Sub", "Get Started with Dataplex", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Cloud Functions: 3 Ways"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sofiur Rahaman", "email": "rahamansofiur697@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a6bf96b0-52f6-4c30-8b62-bd10f5e0ebfe", "badges_count": 4, "incomplete_assignments_count": 12, "completed_assignments_count": 3, "badges": ["Analyze Images with the Cloud Vision API", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Analyze Images with the Cloud Vision API", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways"]}, {"name": "Suman Dutta", "email": "duttsuman0405@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/4ce66bf7-bd0f-4421-8d57-0d59b6293914", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Ankita Ghosh", "email": "lavender.Ajam@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e970bd26-086b-4b0b-b298-da4dcf81cd96", "badges_count": 14, "incomplete_assignments_count": 2, "completed_assignments_count": 13, "badges": ["Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Level 3: Google Cloud Adventures", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Get Started with Pub/Sub", "Get Started with Google Workspace Tools"], "completed_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Aritra Saha", "email": "aritras790@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/0d6c25fe-be89-4741-b5c3-fde41d6315e1", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Irtequa Rizwan", "email": "rirtequa@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e1951028-8b4f-4a0c-a19a-405a3ca83a4c", "badges_count": 2, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway"], "completed_assignments": ["Get Started with Cloud Storage"]}, {"name": "Chirag Saraf", "email": "chirag.saraf24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/7127f8ba-eb8c-4a67-8d2d-3b468f610715", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Looker", "Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Cloud Functions: 3 Ways", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Monitoring in Google Cloud", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Shamayita Moitra", "email": "zydip.october777@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/2a865f24-df80-4d73-ba58-2a808fad8a01", "badges_count": 6, "incomplete_assignments_count": 9, "completed_assignments_count": 6, "badges": ["Get Started with Pub/Sub", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Srijita Bhattacharjee", "email": "srijitabhatt03@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/210686bc-0c1d-4e20-bce6-09a3c8901a79", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Agniva Ray", "email": "agnivaray.work@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/62d3964f-03bd-410a-aa7d-7843f6162c44", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Deepali Singh", "email": "vs6614108@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/bb47d1f0-0b57-4a5c-9b10-cd28749772ea", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "PRAGYA SINGH", "email": "pragyaxyz2006@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b8d8482d-ac8f-4b09-9438-4432fc97042c", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "SOUGATA DATTA", "email": "sougata05datta@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/6c92b711-6b58-4566-80aa-547c550c3085", "badges_count": 15, "incomplete_assignments_count": 2, "completed_assignments_count": 13, "badges": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Soumyadip Bose", "email": "soumyadipbose269@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/fd6806e8-78c5-46c7-96ab-ee99c784ea4f", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Anshul Agarwal", "email": "anshulagarwal7677@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/47e2859e-fd8a-4539-b098-cb12a41f56d3", "badges_count": 13, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Get Started with API Gateway", "Get Started with Pub/Sub", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Arka Sengupta", "email": "senguptaarka89@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/219e1c18-3fd3-435d-8ac4-ab59f17db01e", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Networking Fundamentals on Google Cloud", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Oishi Das", "email": "oishidas49@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/3e3d1ed0-7ca1-445e-8d6b-d802d121fdbc", "badges_count": 2, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Anushree Saha", "email": "anushrees113@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e96d4090-fceb-4698-be80-5936214f3a1b", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Bisar Nawaz", "email": "jinxrebel5@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/01b6e4ec-7da2-469d-abb4-89324227a110", "badges_count": 17, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sneha Ghorai", "email": "snehaghorai20@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/594bd242-f109-454c-bde8-90e4998a4797", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sagar Kumar Biswas", "email": "biswassagarkumar6@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/89a81ee5-b4b1-44c4-90ff-b538dc441020", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sucheta Biswas", "email": "biswassucheta04@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e52f0093-47af-4da6-8018-d372cf3de1b0", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Shirsa Rooj", "email": "roojshirsa2006@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9eb661a8-4db5-4c1c-afdb-57198d07c99c", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Aakriti Rajak", "email": "aakriti.rajak2028@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/fd9ae5a1-c18c-4194-a2da-b61d1de53667", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Kuntal Roy", "email": "kuntal.work02@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/94771468-9272-44a0-a11c-a49a93637e55", "badges_count": 3, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway"], "completed_assignments": ["The Basics of Google Cloud Compute", "Get Started with Cloud Storage"]}, {"name": "Nilesh Roy Chowdhury", "email": "nileshroychowdhury2@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a16d1d1c-5133-4f35-b456-0ada860f6e02", "badges_count": 6, "incomplete_assignments_count": 11, "completed_assignments_count": 4, "badges": ["Get Started with Dataplex", "Introduction to Generative AI", "Level 3: Google Cloud Adventures", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Looker"], "completed_assignments": ["Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sayan Bera", "email": "sayanberanew@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/ffd3516b-521b-4f70-89f8-fc6c1dd21da2", "badges_count": 2, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["The Basics of Google Cloud Compute"]}, {"name": "Debnil Dey", "email": "debddj24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e424ea43-986d-4a76-af6f-55bbe8f9441d", "badges_count": 15, "incomplete_assignments_count": 1, "completed_assignments_count": 14, "badges": ["Get Started with Dataplex", "Get Started with Pub/Sub", "Cloud Functions: 3 Ways", "Develop GenAI Apps with Gemini and Streamlit", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud", "Prompt Design in Vertex AI", "App Engine: 3 Ways", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Rajdeep Debnath", "email": "rajdeep2005debnath@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/6444b3e7-132c-4a7c-8802-8c955018dec9", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Get Started with Pub/Sub", "Cloud Functions: 3 Ways", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Monitoring in Google Cloud", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Subhodeep Routh", "email": "subhodeep.gdsc2024@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/da1ae6e2-dbae-4c33-a2b2-7d6881147f06", "badges_count": 1, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["Get Started with API Gateway"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with Cloud Storage"], "completed_assignments": ["Get Started with API Gateway"]}, {"name": "Md Dilnawaz Khan", "email": "dilnawazkhan2228@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b6f8b74f-8d77-4e88-82c7-79537f2d44a3", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Shannidhya Guha", "email": "shanonlinecourse@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/5c3bbc6b-01a7-4ba7-b573-a39f61bf8025", "badges_count": 1, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": ["Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Swastika Kundu", "email": "swastikakundu110606@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/b670f355-fc76-4166-bd88-2c6aa7fb4c50", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Dwaipyan Ghosh", "email": "ghoshdwaipyan@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e1e8db5c-f3d2-4121-a421-c17b1c93a38b", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Saif khan", "email": "saifkhan.mzk24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/4892ec64-dfbe-46b4-bb0d-423fcd413841", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Get Started with Pub/Sub", "Cloud Speech API: 3 Ways", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "ROHAN MANDAL", "email": "suvrayuue11042008@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/242647ba-3967-4c71-90e1-81ae0522606a", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "ARGHYAKAMAL MONDAL", "email": "arghyakmondalofficial@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/35f71f91-0f22-411f-8e4c-118fa694fb77", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Arpan Chatterjee", "email": "googlejam1@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/c5ddffc9-a9db-40f8-a680-1665fab63b29", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Aniket Ghosh", "email": "aniketghosh2026@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/858a0adc-8726-4c59-818b-389b3a549fd7", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Google Workspace Tools", "Get Started with Looker", "Prompt Design in Vertex AI", "Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Get Started with Dataplex", "Get Started with API Gateway", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures", "Get Started with Cloud Storage"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Samadrita Hazra", "email": "samadritahazra61@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9390a101-5683-4991-aee6-4593b558de7e", "badges_count": 8, "incomplete_assignments_count": 8, "completed_assignments_count": 7, "badges": ["Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Looker", "Get Started with API Gateway", "The Basics of Google Cloud Compute", "Get Started with Cloud Storage", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Get Started with Google Workspace Tools", "Get Started with Dataplex"], "completed_assignments": ["Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Poulami Chattopadhyay", "email": "poojactterjee38@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/5ff9f42c-8c13-4c6e-a83d-4c23a767b85d", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Soukarya Maity", "email": "soukarya.maity2004@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/639c7102-8479-466e-bccf-c0ff6f421b52", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Get Started with Google Workspace Tools", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "The Basics of Google Cloud Compute", "Develop GenAI Apps with Gemini and Streamlit", "Networking Fundamentals on Google Cloud", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Level 3: Google Cloud Adventures", "Get Started with API Gateway", "Get Started with Cloud Storage"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Ankush Dutta", "email": "ankushdutta1981@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/bbf6df12-7dd5-4558-b979-0cd1f9b90db1", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Abhinaba Panja", "email": "panjadeep94@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9bfb32d5-4594-4f62-adbd-a9aa8ca8f753", "badges_count": 12, "incomplete_assignments_count": 5, "completed_assignments_count": 10, "badges": ["Analyze Images with the Cloud Vision API", "Get Started with Google Workspace Tools", "Get Started with API Gateway", "Networking Fundamentals on Google Cloud", "The Basics of Google Cloud Compute", "Get Started with Pub/Sub", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Cloud Storage", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "Get Started with Looker"], "completed_assignments": ["Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Google Workspace Tools", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Saikat Das", "email": "saikat.das.dev@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/8bbad54e-c9cc-44ec-81aa-3e286646bcc4", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sufal Podder", "email": "poddersufal125467@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/f9a7585e-ce52-4ecc-8bc4-1b40ad916b02", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Get Started with Pub/Sub", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Debjit Sen", "email": "debjit.opera@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/e17c944b-4325-4b59-a071-520260f2d53b", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "AYANI CHAKRABORTY", "email": "ayanic371@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/3acf2e7d-df84-4b71-a4b4-e681d83f0c25", "badges_count": 12, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Monitoring in Google Cloud", "Cloud Functions: 3 Ways", "Analyze Images with the Cloud Vision API", "App Engine: 3 Ways", "Get Started with API Gateway", "Cloud Speech API: 3 Ways", "Networking Fundamentals on Google Cloud", "Get Started with Cloud Storage", "Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Get Started with Dataplex", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Get Started with Google Workspace Tools", "Get Started with Looker"], "completed_assignments": ["Get Started with Pub/Sub", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Sharmili Dutta", "email": "sharmilid8@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/48ada286-1812-4332-91e7-b1ebda082bd9", "badges_count": 10, "incomplete_assignments_count": 7, "completed_assignments_count": 8, "badges": ["Monitoring in Google Cloud", "Get Started with API Gateway", "Cloud Functions: 3 Ways", "Get Started with Pub/Sub", "Networking Fundamentals on Google Cloud", "App Engine: 3 Ways", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Cloud Speech API: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker"], "completed_assignments": ["Get Started with Pub/Sub", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Aakancha Verma", "email": "aakanchaverma25@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/5cc53ad6-6dd7-4de9-9d86-d529beb99225", "badges_count": 13, "incomplete_assignments_count": 3, "completed_assignments_count": 12, "badges": ["Get Started with Looker", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Get Started with API Gateway", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Deepmalya Koley", "email": "iamdeepmalya@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/904ec5ec-2ed6-4761-a818-31a2563c7741", "badges_count": 3, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with Pub/Sub", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Get Started with Pub/Sub", "The Basics of Google Cloud Compute"]}, {"name": "Samrita Khan", "email": "samritakhan72@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/d0d78dfc-4909-49bd-a373-1b7b76e64d7b", "badges_count": 13, "incomplete_assignments_count": 3, "completed_assignments_count": 12, "badges": ["Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Diwali in The Arcade", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Develop GenAI Apps with Gemini and Streamlit", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools"], "completed_assignments": ["Get Started with Pub/Sub", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "MD Asif", "email": "mdasif15092003@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/8a25358e-62f8-4038-84e9-66ebb7243257", "badges_count": 2, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["Get Started with Cloud Storage", "Introduction to Generative AI"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway"], "completed_assignments": ["Get Started with Cloud Storage"]}, {"name": "Aniket Gupta", "email": "guptaaniket1404@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/bc30f921-3dcf-44d9-9f01-6e726812d20f", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Mousumi Bera", "email": "mousumiberapku06022006@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/7a25f602-0460-443a-ab88-f8b5d1d5f5b3", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Albin Mathew", "email": "mathewalbin2005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/16d01819-7db7-4056-8ae8-74e1df8affb6", "badges_count": 17, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Cloud Functions: 3 Ways", "Get Started with API Gateway", "Get Started with Dataplex", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Analyze Images with the Cloud Vision API", "Prompt Design in Vertex AI", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Cloud Storage", "Get Started with Google Workspace Tools", "Get Started with Looker", "The Basics of Google Cloud Compute", "Introduction to Generative AI", "Level 3: Google Cloud Adventures"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "RUPSA GHOSH", "email": "snivellushere@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/1093d49d-0ac3-4b50-ab6b-0d6df4fc5bc1", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "SRIMOYEE MUKHERJEE", "email": "srimoyeemukherjee24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/acdc81e5-8954-4452-8d6c-688a1fb0cb24", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Drisana Bhattacharyya", "email": "drisanacseb25@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9867a956-ee5e-418d-b097-5dd8fdc385d0", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Neerjhar Goswami", "email": "nirjhargoswami8@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/4a8a423a-fd99-455b-a7d3-69886624d02c", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Saptarshi Dutta", "email": "saptarshidutta599@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/71133a1b-364e-4f19-94a2-54ad0f1999c1", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Ishika Patra", "email": "ishikapatra0275@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/d98f5ac2-2612-4a6a-bd4a-d0df9815750c", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Raj Mondol", "email": "rajmeow581319@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/4895f76c-7f99-4cf1-ba75-a0d4ff934d75", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Saptarshi Ghosh", "email": "saptarshi0555@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/9422702c-7735-4691-90d4-c8fcb03b8576", "badges_count": 2, "incomplete_assignments_count": 13, "completed_assignments_count": 2, "badges": ["Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway"], "completed_assignments": ["The Basics of Google Cloud Compute", "Get Started with Cloud Storage"]}, {"name": "Diptesh Mondal", "email": "diptesh.mondal2004@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/a9f91266-6e99-4a9c-a3d5-79a6aff45579", "badges_count": 1, "incomplete_assignments_count": 14, "completed_assignments_count": 1, "badges": ["The Basics of Google Cloud Compute"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["The Basics of Google Cloud Compute"]}, {"name": "Hriddhita Bhattacharjee", "email": "hriddhitab@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/060ede48-4b38-4e1a-8b2e-4d241c837c67", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Nilanjan Mondal", "email": "nilanjanjenai24@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/eb54e91e-dacd-44ae-9534-ed5f484c9b59", "badges_count": 5, "incomplete_assignments_count": 10, "completed_assignments_count": 5, "badges": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": ["Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways"]}, {"name": "Suchetan Chakraborty", "email": "gdgsuchetan005@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/7e3ccce5-be19-4abc-b59d-2a7f971e102e", "badges_count": 12, "incomplete_assignments_count": 4, "completed_assignments_count": 11, "badges": ["Get Started with API Gateway", "Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker"], "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Tanisha Dhar", "email": "tanishadhar21@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/67d3d3e7-26ba-4e02-839c-62d087fee4f1", "badges_count": 16, "incomplete_assignments_count": 0, "completed_assignments_count": 15, "badges": ["Diwali in The Arcade", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Get Started with Pub/Sub", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage", "The Basics of Google Cloud Compute"], "incomplete_assignments": null, "completed_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"]}, {"name": "Shreya Ghosh", "email": "shreyapomi20@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/Odceedd5-85ea-466f-9709-47b33f7e9107", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Ishika Mondal", "email": "rexine1127@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/35da4c08-b0ca-4fe6-b788-e0a44d08d98f", "badges_count": 6, "incomplete_assignments_count": 10, "completed_assignments_count": 5, "badges": ["Get Started with Cloud Storage", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Level 3: Google Cloud Adventures"], "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "Get Started with Looker", "Get Started with API Gateway"], "completed_assignments": ["Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "The Basics of Google Cloud Compute", "Get Started with Cloud Storage"]}, {"name": "Oishi Bhattacharya", "email": "bhattacharyaoishi3@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/1b1a4b96-b6ea-459d-8b3e-e8f58700d1f5", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}, {"name": "Sayak samanta", "email": "sayaksmnt@gmail.com", "profile_url": "https://www.cloudskillsboost.google/public_profiles/23902ddc-6d4d-4744-9e5d-0b3b14ad4ca9", "badges_count": 0, "incomplete_assignments_count": 15, "completed_assignments_count": 0, "badges": null, "incomplete_assignments": ["Get Started with Pub/Sub", "Develop GenAI Apps with Gemini and Streamlit", "Prompt Design in Vertex AI", "Analyze Images with the Cloud Vision API", "Networking Fundamentals on Google Cloud", "Monitoring in Google Cloud", "Cloud Speech API: 3 Ways", "App Engine: 3 Ways", "Cloud Functions: 3 Ways", "Get Started with Google Workspace Tools", "Get Started with Dataplex", "The Basics of Google Cloud Compute", "Get Started with Looker", "Get Started with API Gateway", "Get Started with Cloud Storage"], "completed_assignments": null}]